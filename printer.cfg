[include ebb.cfg]
# [include u2c.cfg]
# [include adxl345.cfg] # needed to install klipper to host
[include basic_macro.cfg]
# [include extruder.cfg]
[include filament.cfg]
[include heater.cfg]
[include kiauh_macros.cfg]
[include klicky-probe.cfg]
# [include lcd.cfg]
[include pins.cfg]
[include probe.cfg]
[include quad_gantry_level.cfg]
[include runout.cfg]
[include speedtest.cfg]
# [include stealthburner_led.cfg]
[include steppers.cfg]
[include user_vars.cfg]
[include z_calibration.cfg]
[include klipper_update.cfg]
[include test_macro.cfg]

[virtual_sdcard]
path: ~/printer_data/gcode_files
on_error_gcode:
  CANCEL_PRINT

[pause_resume]
[endstop_phase]
[display_status]

[mcu]
##--------------------------------------------------------------------
# serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_2E004E001450304738313820-if00
# restart_method: command
##--------------------------------------------------------------------
canbus_uuid: ce5f75f5c4f0
canbus_interface: can0

[temperature_sensor RaspberryPi]
sensor_type: temperature_host

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 40000
max_accel_to_decel = 40000
max_z_velocity = 30
max_z_accel = 700
square_corner_velocity = 30.0


[temperature_sensor Octopus]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 150

[stepper_z]
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 1.20

#####################################################################
# 	Fan Control
#####################################################################
[gcode_arcs]
#resolution: 1.0
[exclude_object]
[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[heater_fan nevermore_fan]
##	Controller fan - CNC_FAN2
pin: FAN2
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

[heater_fan exhaust_fan1]
#	Exhaust fan - CNC_FAN3
pin: FAN3
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 0.50

[heater_fan exhaust_fan2]
#	Exhaust fan - CNC_FAN3
pin: FAN4
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 0.50

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01


#####################################################################
#  Idle Timeout 
#####################################################################
[idle_timeout]
gcode:
  {% if printer.webhooks.state|lower == 'ready' %}
    {% if printer.pause_resume.is_paused|lower == 'false' %}
      {action_respond_info("POWER: Execute Idle Timeout")}
      TURN_OFF_HEATERS
      M141
      M84
      UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION=10
    {% endif %}
  {% endif %}
# 2h timeout
timeout: 7200

#[safe_z_home]

# homing_override and safe_z_homing cannot be used simultaneously
# Используется homing из klicky-macros.cfg
# Параметры endstop задаются в klicky-variables.cfg

##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:229,329
#home_xy_position:-10,-10
#speed:100
#z_hop:10

#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    M84
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    #	Uncomment for 350mm build
    #	G0 X175 Y175 Z30 F3600
    BED_MESH_PROFILE LOAD="default"


[gcode_macro _SET_PARAMS]
variable_save_params: {'retract'           : 0.0,
                       'pressure_advance'  : 0.0 }
variable_params: {'retract'          : '0',
                  'pressure_advance' : '0'}

  #############  Store input parameters  #############
gcode:
  {% set save_params = {'retract'           : printer['firmware_retraction'].retract_length|default(0)|float|round(2),
                        'pressure_advance'  : printer['extruder'].pressure_advance|default(0)|float|round(3)} %}
  {% set params = {'retract'          : params.RETRACT_LEN|default(printer['firmware_retraction'].retract_length)|float|round(2),
                   'pressure_advance' : params.PRESSURE_ADVANCE|default(printer['extruder'].pressure_advance)|float|round(3)} %}

  { action_respond_info("Saved retract: %.2f pressure_advance: %.3f" % (save_params.retract, save_params.pressure_advance)) }
  SET_RETRACTION RETRACT_LENGTH={params.retract}
  SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={params.pressure_advance}
  { action_respond_info("Set retract: %.2f pressure_advance: %.3f" % (params.retract, params.pressure_advance)) }
  SET_GCODE_VARIABLE MACRO=_SET_PARAMS VARIABLE=save_params VALUE="{save_params}"

[gcode_macro _RESTORE_PARAMS]
variable_save_params: {'retract' : 0.0,
                       'pressure_advance'  : 0.0 }
gcode:
  {% set save_params = {
                 'retract'           : printer['gcode_macro _SET_PARAMS'].save_params.retract,
                 'pressure_advance'  : printer['gcode_macro _SET_PARAMS'].save_params.pressure_advance } %}

  SET_RETRACTION RETRACT_LENGTH={save_params.retract}
  SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={save_params.pressure_advance}
  { action_respond_info("Restored retract: %.2f pressure_advance: %.3f" % (save_params.retract, save_params.pressure_advance)) }

[homing_heaters]
steppers: stepper_z
heaters: extruder

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
description: All cmd needed at print start
variable_save_params: {'retract' : 0.0,
                       'pressure_advance'  : 0.0 }

variable_var: {'temp'        : {'extruder': 245.0, 'bed': 100.0, 'chamber': 40.0, 'endstop': 0.0},
               'delta'       : {'chamber': 5.0, 'bed': 10},
               'time'        : {'soak' : 1800, 'soak_extra': 900},
               'redo_qgl'    : True,
               'prime_height': 0.0,
               'z_adjust'    : 0.0,
               'filter'      : True,
               'retract'     : '0',
               'pressure_advance' : '0'}

;Start Gcode
gcode:
#    {% if printer['firmware_retraction'].retract_length > 0 %}
#       {% set save_params = {'retract'           : printer['firmware_retraction'].retract_length|default(0)|float|round(2),
#                             'pressure_advance'  : printer['extruder'].pressure_advance|default(0)|float|round(3)} %}
#       { action_respond_info("Saved retract: %.2f pressure_advance: %.3f" % (save_params.retract, save_params.pressure_advance)) }
#    {% else %}
#       { action_respond_info("Retract and pressure_advance not stored as they are zero value.") }
#    {% endif %}

    #############  Store input parameters  #############
    {% set MINX = params.MINX|default(printer.configfile.settings.bed_mesh.mesh_min[0])|float %}
    {% set MINY = params.MINY|default(printer.configfile.settings.bed_mesh.mesh_min[1])|float %}    
    {% set MAXX = params.MAXX|default(printer.configfile.settings.bed_mesh.mesh_max[0])|float %}
    {% set MAXY = params.MAXY|default(printer.configfile.settings.bed_mesh.mesh_max[1])|float %}

    {% set MINX = (MINX if MINX|float > printer.configfile.settings.bed_mesh.mesh_min[0]|float else printer.configfile.settings.bed_mesh.mesh_min[0])|float %}
    {% set MINY = (MINY if MINY|float > printer.configfile.settings.bed_mesh.mesh_min[1]|float else printer.configfile.settings.bed_mesh.mesh_min[1])|float %}
    {% set MAXX = (MAXX if MAXX|float < printer.configfile.settings.bed_mesh.mesh_max[0]|float else printer.configfile.settings.bed_mesh.mesh_max[0])|float %}
    {% set MAXY = (MAXY if MAXY|float < printer.configfile.settings.bed_mesh.mesh_max[1]|float else printer.configfile.settings.bed_mesh.mesh_max[1])|float %}

    {% set X_COUNT = ((MAXX-MINX)/40)|int %}
    {% set Y_COUNT = ((MAXY-MINY)/40)|int %}
    {% set X_COUNT = X_COUNT if  X_COUNT > 3 else 3 %}
    {% set Y_COUNT = Y_COUNT if  X_COUNT > 3 else 3 %}

    {% set RRI = ((X_COUNT * Y_COUNT) / 2 + 1)|int %}

    {action_respond_info( "MINX %.2f, MINY %.2f, MAXX %.2f, MAXY %.2f, X_COUNT %d, Y_COUNT %d, RRI %d\n" % ( MINX, MINY, MAXX, MAXY, X_COUNT, Y_COUNT, RRI) )}
 
    {% set var = {'temp': {'extruder': params.EXTRUDER_TEMP|default(245)|float|round(1),
                           'bed'     : params.BED_TEMP|default(100)|float|round(1),
                           'chamber' : params.CHAMBER_TEMP|default(50)|float|round(1),
                           'endstop' : 0.0},
                  'delta': {'chamber': params.DELTA_C|default(5)|float|round(1), 
                            'bed'    : params.DELTA_B|default(10)|float|round(1)},
               'redo_qgl'    : True,
               'z_adjust'    : params.Z_ADJUST|default(0.0)|float,
               'filter'      : False if params.FILTER|default(1)|int == 0 else True,
               'retract'     : params.RETRACT_LEN|default(0.35)|float|round(2),
               'pressure_advance' : params.PRESSURE_ADVANCE|default(0.025)|float|round(3)} %}

    CLEAR_PAUSE
    _PROBE_UNLOCK

    # SET_RETRACTION RETRACT_LENGTH={var.retract}
    # SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={var.pressure_advance}

    M140 S{var.temp.bed}      ; heat bed
    M104 S{var.temp.extruder} ; heat extruder

    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

    {% if not 'xyz' in printer.toolhead.homed_axes %}
       G32                        ; home all axes
    {% endif %}

    G90                            ; absolute positioning
    G0 Z20 F3000                   ; move nozzle away from bed
    G90
    G0 X80 Y352 F16000

    M109 S{var.temp.extruder} ; heat extruder and wait
    M190 S{var.temp.bed}      ; heat bed and wait

    G92 E0                      ; zero the extruder
    G0 E-2 F300                 ; retract filament
    G92 E0                      ; zero the extruder
    
    G90                         ; absolute positioning
#   G0 Z5 X81 F3000
    G0 X80 Y352 F16000
    G0 Z0 X81 F3000
    G91                            ; relative positioning
    G0 X40 Y4 F8000
    G0 X-40 Y-4 F8000
    G0 X40 F8000
    G0 X-40 Y4 F8000
    G0 X40 Y-4 F8000

    BED_MESH_CLEAR
    Attach_Probe_Lock

    Calibrate_z
#    BED_MESH_CALIBRATE MESH_MIN={MINX + printer.configfile.settings.probe.x_offset},{MINY + printer.configfile.settings.probe.y_offset} MESH_MAX={MAXX + printer.configfile.settings.probe.x_offset},{MAXY + printer.configfile.settings.probe.y_offset} PROBE_COUNT={X_COUNT},{Y_COUNT} Relative_reference_index={RRI}
    BED_MESH_CALIBRATE MESH_MIN={MINX},{MINY} MESH_MAX={MAXX},{MAXY} PROBE_COUNT={X_COUNT},{Y_COUNT} Relative_reference_index={RRI}
    Dock_Probe_Unlock

    G90                         ; absolute positioning
    G0 X80 Y352 F16000
    G0 Z0 X81 F3000
    M109 S{var.temp.extruder} ; heat extruder and wait
    M109 S{var.temp.extruder} ; heat extruder and wait

    G92 E0                      ; zero the extruder
    G0  E4 F300                 ; retract filament
    G92 E0                      ; zero the extruder

    G91                            ; relative positioning
    G0 X40 Y4 F8000
    G0 X-40 Y-4 F8000
    G0 X40 F8000
    G0 X-40 Y4 F8000
    G0 X40 Y-4 F8000
    G0 Z10 F3000

    PRIME_LINE ;filament.cfg

    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    G0 Z2 F6000
    G0 X{MINX} Y{MINY} F30000

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    G1 E-2.0 F3600
    M107                           ; turn off fan
    G0 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X80 Y352 F8000              ; park nozzle at rear
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1

    CLEAR_PAUSE
    {% set save_params = printer['gcode_macro PRINT_START'].save_params %}
     # SET_RETRACTION RETRACT_LENGTH={save_params.retract}
     # SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={save_params.pressure_advance}
    { action_respond_info("Saved retract: %.2f pressure_advance: %.3f" % (save_params.retract, save_params.pressure_advance)) }
    
##    BED_MESH_CLEAR
    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.068333, 0.054375, 0.026458, 0.023854, 0.006354, 0.025417, 0.042813, 0.064688, 0.096146
#*# 	0.042813, 0.068958, 0.029167, -0.011146, -0.004167, -0.015312, 0.023229, 0.030208, 0.062292
#*# 	0.015625, 0.007604, -0.013229, -0.013542, -0.022500, -0.030729, -0.012187, 0.017292, 0.058229
#*# 	0.046042, 0.008542, -0.011250, -0.033437, -0.031042, -0.047500, -0.021667, 0.019583, 0.042083
#*# 	0.016875, 0.000000, -0.020417, -0.031563, -0.046875, -0.067292, -0.011667, 0.011146, 0.043646
#*# 	0.045625, 0.017917, 0.001354, -0.046458, -0.017188, -0.030625, 0.003229, -0.002708, 0.041771
#*# 	0.020208, -0.000729, 0.007917, -0.038542, -0.030833, -0.032083, -0.013646, -0.005521, 0.047917
#*# 	0.062917, 0.016354, 0.010625, 0.000104, -0.020729, -0.002813, 0.000937, 0.029687, 0.061979
#*# 	0.105104, 0.066771, 0.030104, 0.040000, 0.034062, -0.000729, -0.005208, 0.024062, 0.088958
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = bicubic
#*# y_count = 9
#*# mesh_y_pps = 4
#*# min_y = 35.0
#*# x_count = 9
#*# max_y = 315.0
#*# mesh_x_pps = 4
#*# max_x = 315.0
#*#
#*# [stepper_z]
#*# position_endstop = 1.009
#*#
#*# [bed_mesh cold]
#*# version = 1
#*# points =
#*# 	  0.076458, 0.065104, 0.050208, 0.019583, -0.008646, 0.016875, 0.045938, 0.036458, 0.076563
#*# 	  0.054896, 0.054063, 0.017708, 0.006667, -0.011771, -0.015625, 0.005625, 0.047500, 0.085417
#*# 	  0.065625, 0.045000, -0.016354, -0.008854, -0.028437, -0.038333, 0.013646, 0.019583, 0.047188
#*# 	  0.063750, 0.032917, 0.005313, 0.021146, -0.016771, -0.016354, -0.010937, 0.024896, 0.056979
#*# 	  0.026771, 0.000000, 0.014167, -0.021458, -0.020417, -0.033333, -0.006563, 0.026146, 0.045833
#*# 	  0.043958, 0.018021, -0.011875, -0.030833, -0.034479, -0.041042, 0.000833, 0.012396, 0.069687
#*# 	  0.044583, -0.003021, -0.004688, -0.042708, -0.030833, -0.046354, -0.034792, -0.009167, 0.047187
#*# 	  0.033750, 0.011979, 0.004271, -0.003333, -0.034792, -0.044375, 0.000521, 0.003646, 0.087604
#*# 	  0.062917, 0.002292, 0.006146, 0.013437, -0.027188, -0.036771, -0.036875, 0.005208, 0.061667
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = bicubic
#*# y_count = 9
#*# mesh_y_pps = 4
#*# min_y = 35.0
#*# x_count = 9
#*# max_y = 315.0
#*# mesh_x_pps = 4
#*# max_x = 315.0
